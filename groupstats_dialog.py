# -*- coding: utf-8 -*-
"""
/***************************************************************************
 GroupStatsDialog
                                 A QGIS plugin
 Summary statistics for vector layers data
 Generated by Plugin Builder: http://g-sherman.github.io/Qgis-Plugin-Builder/
                             -------------------
        begin                : 2018-08-20
        git sha              : $Format:%H$
        copyright            : (C) 2018 by Basil Eric Rabi
        email                : ericbasil.rabi@gmail.com
 ***************************************************************************/

/***************************************************************************
 *                                                                         *
 *   This program is free software; you can redistribute it and/or modify  *
 *   it under the terms of the GNU General Public License as published by  *
 *   the Free Software Foundation; either version 2 of the License, or     *
 *   (at your option) any later version.                                   *
 *                                                                         *
 ***************************************************************************/
"""

from qgis.PyQt.QtCore import QItemSelectionModel, Qt
from qgis.PyQt.QtWidgets import QMainWindow, QTableView  # , QWidget

from .groupstats_ui import Ui_GroupStatsDialog


class GroupStatsDialog(QMainWindow):
    """
    Plugin dialog.
    """

    def __init__(self):
        """Constructor."""
        super().__init__()
        # QWidget.__init__(self)
        self.ui = Ui_GroupStatsDialog()
        self.ui.setupUi(self)


class ResultsWindow(QTableView):
    """
    Window with calculation results.
    """

    def __init__(self):
        super().__init__()
        self.setSortingEnabled(True)
        self.setObjectName('results')
        self.verticalHeader().setSortIndicatorShown(True)
        self.clicked.connect(self.checkAll)

    def selectionCommand(self, index, event=None):
        """
        Adds selection of entire rows and columns when the table header is
        selected
        """
        # http://doc.qt.io/qt-5/qabstractitemview.html#selectionCommand
        # http://doc.qt.io/qt-5/qitemselectionmodel.html#SelectionFlag-enum
        flag = super().selectionCommand(index, event)

        selected_cell_type = self.model().data(index, Qt.UserRole + 1)

        # TODO: Find out the purpose of the binary OR "|" operator
        if selected_cell_type == 'row':
            return flag | QItemSelectionModel.Rows
        elif selected_cell_type == 'column':
            return flag | QItemSelectionModel.Columns
        else:
            return flag

    def checkAll(self, index):
        """
        Select or deselect all data after clicking on the corner of the table.
        """
        selected_cell_type = self.model().data(index, Qt.UserRole + 1)

        # Check if the corner is celected
        if selected_cell_type not in ['data', 'row', 'column']:
            # If the corner is selected, mark all data
            if self.selectionModel().isSelected(index):
                self.selectAll()
            else:
                self.clearSelection()
